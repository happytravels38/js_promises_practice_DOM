{"mappings":"ACEA,SAAS,gBAAgB,CAAC,mBAAoB,WAKnC,IAAA,EAAT,SAA0B,CAAO,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CAC3B,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,YAAY,CAAC,UAAW,gBACrC,EAAa,SAAS,CAAG,EAAU,QAAU,UAC7C,EAAa,WAAW,CAAG,EAC3B,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAXI,EAAoB,CAAA,EACpB,EAAqB,CAAA,EA2BzB,AAdqB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAM,EAAkB,WACtB,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,EACxC,EAEA,SAAS,gBAAgB,CAAC,QAAS,GAEnC,WAAW,WACT,EAAO,AAAI,MAAM,+BACjB,SAAS,mBAAmB,CAAC,QAAS,EACxC,EAAG,IACL,GAGG,IAAI,CAAC,SAAC,CADT,EACqB,OAAA,EAAiB,EACnC,GAAA,KAAK,CAAC,SAAC,CAAP,EAAmB,OAAA,EAAiB,EAAS,CAAA,E,GAgBhD,AAbsB,IAAI,QAAQ,SAAC,CAAnC,EACE,IAAM,EAAc,SAAC,CAArB,EACM,CAAA,AAAkB,IAAlB,EAAO,MAAM,EAAU,AAAkB,IAAlB,EAAO,MAAM,AAAK,IAC3C,EAAQ,+BACR,SAAS,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,cAAe,GAEhD,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAEc,IAAI,CAAC,SAAC,CAApB,EAAgC,OAAA,EAAiB,E,GAwBjD,AArBqB,IAAI,QAAQ,SAAC,CAAlC,EACE,IAAM,EAAmB,SAAC,CAA1B,EACwB,IAAlB,EAAO,MAAM,EACf,CAAA,EAAoB,CAAA,CADtB,EAIsB,IAAlB,EAAO,MAAM,EACf,CAAA,EAAqB,CAAA,CADvB,EAII,GAAqB,IACvB,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,cAAe,GAEhD,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAEa,IAAI,CAAC,SAAC,CAAnB,EAA+B,OAAA,EAAiB,E,EAClD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var showNotification = // Success and error notification function\n    function showNotification(message) {\n        var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        var notification = document.createElement(\"div\");\n        notification.setAttribute(\"data-qa\", \"notification\");\n        notification.className = isError ? \"error\" : \"success\";\n        notification.textContent = message;\n        document.body.appendChild(notification);\n    };\n    var leftClickOccurred = false;\n    var rightClickOccurred = false;\n    // First promise\n    var firstPromise = new Promise(function(resolve, reject) {\n        var handleLeftClick = function() {\n            resolve(\"First promise was resolved\");\n            document.removeEventListener(\"click\", handleLeftClick);\n        };\n        document.addEventListener(\"click\", handleLeftClick);\n        setTimeout(function() {\n            reject(new Error(\"First promise was rejected\"));\n            document.removeEventListener(\"click\", handleLeftClick);\n        }, 3000);\n    });\n    firstPromise.then(function(message) {\n        return showNotification(message);\n    }).catch(function(message) {\n        return showNotification(message, true);\n    });\n    // Second promise\n    var secondPromise = new Promise(function(resolve) {\n        var handleClick = function(events) {\n            if (events.button === 0 || events.button === 2) {\n                resolve(\"Second promise was resolved\");\n                document.removeEventListener(\"click\", handleClick);\n                document.removeEventListener(\"contextmenu\", handleClick);\n            }\n        };\n        document.addEventListener(\"click\", handleClick);\n        document.addEventListener(\"contextmenu\", handleClick);\n    });\n    secondPromise.then(function(message) {\n        return showNotification(message);\n    });\n    // Third promise\n    var thirdPromise = new Promise(function(resolve) {\n        var handleBothClicks = function(events) {\n            if (events.button === 0) leftClickOccurred = true;\n            if (events.button === 2) rightClickOccurred = true;\n            if (leftClickOccurred && rightClickOccurred) {\n                resolve(\"Third promise was resolved\");\n                document.removeEventListener(\"click\", handleBothClicks);\n                document.removeEventListener(\"contextmenu\", handleBothClicks);\n            }\n        };\n        document.addEventListener(\"click\", handleBothClicks);\n        document.addEventListener(\"contextmenu\", handleBothClicks);\n    });\n    thirdPromise.then(function(message) {\n        return showNotification(message);\n    });\n});\n\n//# sourceMappingURL=index.9c5b25fc.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let leftClickOccurred = false;\n  let rightClickOccurred = false;\n\n  // Success and error notification function\n  function showNotification(message, isError = false) {\n    const notification = document.createElement('div');\n\n    notification.setAttribute('data-qa', 'notification');\n    notification.className = isError ? 'error' : 'success';\n    notification.textContent = message;\n    document.body.appendChild(notification);\n  }\n\n  // First promise\n  const firstPromise = new Promise((resolve, reject) => {\n    const handleLeftClick = () => {\n      resolve('First promise was resolved');\n      document.removeEventListener('click', handleLeftClick);\n    };\n\n    document.addEventListener('click', handleLeftClick);\n\n    setTimeout(() => {\n      reject(new Error('First promise was rejected'));\n      document.removeEventListener('click', handleLeftClick);\n    }, 3000);\n  });\n\n  firstPromise\n    .then((message) => showNotification(message))\n    .catch((message) => showNotification(message, true));\n\n  // Second promise\n  const secondPromise = new Promise((resolve) => {\n    const handleClick = (events) => {\n      if (events.button === 0 || events.button === 2) {\n        resolve('Second promise was resolved');\n        document.removeEventListener('click', handleClick);\n        document.removeEventListener('contextmenu', handleClick);\n      }\n    };\n\n    document.addEventListener('click', handleClick);\n    document.addEventListener('contextmenu', handleClick);\n  });\n\n  secondPromise.then((message) => showNotification(message));\n\n  // Third promise\n  const thirdPromise = new Promise((resolve) => {\n    const handleBothClicks = (events) => {\n      if (events.button === 0) {\n        leftClickOccurred = true;\n      }\n\n      if (events.button === 2) {\n        rightClickOccurred = true;\n      }\n\n      if (leftClickOccurred && rightClickOccurred) {\n        resolve('Third promise was resolved');\n        document.removeEventListener('click', handleBothClicks);\n        document.removeEventListener('contextmenu', handleBothClicks);\n      }\n    };\n\n    document.addEventListener('click', handleBothClicks);\n    document.addEventListener('contextmenu', handleBothClicks);\n  });\n\n  thirdPromise.then((message) => showNotification(message));\n});\n"],"names":["document","addEventListener","showNotification","message","isError","arguments","length","notification","createElement","setAttribute","className","textContent","body","appendChild","leftClickOccurred","rightClickOccurred","firstPromise","Promise","resolve","reject","handleLeftClick","removeEventListener","setTimeout","Error","then","catch","secondPromise","handleClick","events","button","thirdPromise","handleBothClicks"],"version":3,"file":"index.9c5b25fc.js.map"}